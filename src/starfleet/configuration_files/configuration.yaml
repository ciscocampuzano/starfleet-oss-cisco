# The values in this file are based on the included AWS SAM template.
# See https://gemini-oss.github.io/starfleet/installation/PrepareConfiguration/ for more details.

# This is the main configuration stanza for Starfleet and the Starbase:
STARFLEET:
  # REPLACE with the region for deployment
  DeploymentRegion: us-east-1

  # REPLACE with the Account ID for deployment
  TemplateBucket: starfleet-templates-DEPLOYMENT-ACCOUNT-ID

  # REPLACE with both the region for deployemnt and also the Account ID for deployment
  FanOutQueueUrl: https://sqs.DEPLOYMENT-REGION.amazonaws.com/DEPLOYMENT-ACCOUNT-ID/starbase-fanout-queue

  # Only replace if you have your own Account Index plugin defined:
  AccountIndex: StarfleetDefaultAccountIndex

  # Only use this if you have to store Secrets for your workers (example is the GitHubSyncWorker)
  #  SecretsManager:
  #    SecretId: starfleet
  #    SecretRegion: us-east-2

  LogLevel: DEBUG
  ThirdPartyLoggerLevels:
    botocore: CRITICAL
    'urllib3.connectionpool': CRITICAL


# This is the main configuration stanza for the Account Index Generator Worker Ship
# This is the worker that will go out and get the list of AWS accounts, and some details
# about those accounts like the Parent OUs, Tags, and the enabled regions for those accounts
# and store the results in a JSON file in the S3 Account Index Bucket
AccountIndexGeneratorShip:
  Enabled: True

  # Only replace if you want your YAML to be called something else:
  TemplatePrefix: AccountIndexGenerator/SaveAccountInventory.yaml

  # REPLACE with both the region for deployemnt and also the Account ID for deployment
  InvocationQueueUrl: https://sqs.DEPLOYMENT-REGION.amazonaws.com/DEPLOYMENT-ACCOUNT-ID/starfleet-account-index-generator
  InvocationSources:
    - EVENTBRIDGE_TIMED_EVENT
    - S3
  EventBridgeTimedFrequency: HOURLY

  # This needs to be the name of the IAM role that is created in the Installation documentation for StackSets
  # (but requires you to create it manually because StackSets doesn't operate in the org root, which is one
  # of the many reasons we are making Starfleet...)
  OrgAccountAssumeRole: starfleet-worker-basic-test-role  # This is test deployment role. Swap with `prod` for prod.

  # REPLACE with the AWS account ID for the AWS account that is the organization root:
  OrgAccountId: "REPLACEME"

  # REPLACE with the actual AWS Organization root ID (this is different than the account ID).
  # You can find this in the AWS Organizations UI
  OrgRootId: "r-eplaceme"

  # This needs to be the name of the IAM role that is created in the Installation documentation for StackSets
  # (but requires you to create it manually because StackSets doesn't operate in the org root, which is one
  # of the many reasons we are making Starfleet...)
  DescribeRegionsAssumeRole: starfleet-worker-basic-test-role  # This is test deployment role. Swap with `prod` for prod.


# This is the configuration stanza for the default Account Index plugin. This uses the account index generated by
# the AccountIndexGeneratorShip to build out an account index that the Starbase can use to task the worker ships
# NOTE: You will first need to have the inventory generated in S3 before the Starbase can run. You can do this by
#       running the the CLI for the AccountIndexGeneratorShip.
StarfleetDefaultAccountIndex:

  # REPLACE with the Account ID for deployment
  IndexBucket: starfleet-account-index-DEPLOYMENT-ACCOUNT-ID

  # REPLACE with the AWS Region for where the bucket above resides. The SAM template puts this in the same region
  # as the rest of Starfleet's resources:
  BucketRegion: REPLACE-ME

  # The default is accountIndex.json -- no need to uncomment unless you want to specify a
  # different path.
  # IndexObjectPath: accountIndex.json
